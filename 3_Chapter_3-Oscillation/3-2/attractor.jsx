var Attractor = function(comp,layerNum, posX, posY){this.comp = comp;this.layerNum = layerNum;this.position = createVector(posX,posY);this.mass = 20;this.G = 1;}//Here's where the attraction force is calculated. We need to pass a mover to an attractor, that's "m"Attractor.prototype.calculateAttraction = function(m){//subtract one position from the othervar force = Vector.sub(this.position, m.position);//get the lengthvar distance = force.mag();//we're going to need to build a constrain function. It's in VectorLib. Maybe Vectorlib needs a new name. Feel free to dial these values up and down.distance = constrain(distance, 5, 25);//normalize the vectorforce.normalize();//Here's the gravitational force magnitude. This returns a scalar.var strength = (this.G*this.mass*this.mass) / (distance*distance);//get force vector and multiply!force.mult(strength);return force;}Attractor.prototype.display = function( time ) {    app.project.item(this.comp).layer(this.layerNum).position.setValueAtTime(time,[this.position.x,this.position.y]);};Attractor.prototype.show = function(){    var layerShapeContents = app.project.item(this.comp).layer(this.layerNum).property("ADBE Root Vectors Group");    var size = 128;    //Let's assign the visual properties to the shape layer    layerShapeContents.addProperty("ADBE Vector Shape - Ellipse");    layerShapeContents.property("ADBE Vector Shape - Ellipse").property("ADBE Vector Ellipse Size").setValue([size,size]);    layerShapeContents.addProperty("ADBE Vector Graphic - Fill");    layerShapeContents.property("ADBE Vector Graphic - Fill").property("ADBE Vector Fill Color").setValue([.8,.8,.8,1]);    app.project.item(this.comp).layer(this.layerNum).name = "Attractor";    };