/*     Ok, it's spring time. The code is a little verbose but the seed of Hooke's law has many many motion applications!*/#include VectorLib.jsx#include bob.jsx#include spring.jsx//General initvar comp = 11;var myComp = app.project.item(comp);var myFrameDuration = myComp.frameDuration;var totalFrames = myComp.duration * myComp.frameRate;var bob;var spring;//Create the spring and bob objectsspring = new Spring(comp, 1, myComp.width/2, myComp.height/2, 100);bob = new Bob(comp, 2, myComp.width/2, myComp.height/4);//Will need draw methods for bob and spring. Kind of hacky to keep the internal layer number values of the objects correct. myComp.layers.addShape();spring.show();myComp.layers.addShape();myComp.layer(1).moveAfter(myComp.layer(2));bob.show();//And update the values.for (i=0;i<=totalFrames;i++){        //Let's create a force called hitMe to simulate the user grabbing the Bob and moving it around periodically.    var gravity = createVector(0,5);    var hitMe = createVector(r.randomRange(-10,10),r.randomRange(-10,10));        //Arbitary 4 second intervals    if (totalFrames % (myComp.frameRate * 4) == 0){        bob.applyForce(hitMe)        };        bob.applyForce(gravity);        spring.connect(bob);        spring.constrainLength(bob, 50, 200);        var time = myFrameDuration*i;        bob.update();    bob.display(time);    spring.displayLine(bob,time);    };    /*As always, refer to The Nature of Code byDaniel Shiffmanhttp://natureofcode.comfor original examples!*/ 