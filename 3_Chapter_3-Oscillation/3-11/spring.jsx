//Here's our spring class.// Nature of Code // Daniel Shiffman// Chapter 3: Oscillation// Object to describe an anchor point that can connect to "Bob" objects via a spring// Thank you: http://www.myphysicslab.com/spring2d.htmlvar Spring = function(comp, layer, x, y, l){    this.comp = comp;    this.layer = layer;    this.anchor = createVector(x,y);    this.restlength = l;    this.k  = 0.2; //amount of springiness        };// Calculate and apply spring forceSpring.prototype.connect = function(b){    // Vector pointing from anchor to bob location    var force = Vector.sub(b.position, this.anchor);    var d = force.mag(); // What is the distance?        // Stretch is difference between current distance and rest length    var stretch = d - this.restlength;     // Calculate force according to Hooke's Law    // F = k * stretch    force.normalize();    force.mult(-1 * this.k * stretch);        //Let's crank the force up just to make it more visible and fun.    force.mult(10);        b.applyForce(force);        };Spring.prototype.constrainLength = function(b, minLength, maxLength) {  var dir = Vector.sub(b.position, this.anchor);  var d = dir.mag();  // Is it too short?  if (d < minLength) {    dir.normalize();    dir.mult(minLength);    // Reset location and stop from moving (not realistic physics)    b.position = Vector.add(this.anchor, dir);    b.velocity.mult(0);    // Is it too long?  } else if (d > maxLength) {    dir.normalize();    dir.mult(maxLength);    // Reset location and stop from moving (not realistic physics)    b.position = Vector.add(this.anchor, dir);    b.velocity.mult(0);  }};Spring.prototype.show = function() {        //need to draw a rectangle and a line        var layerShapeContents = app.project.item(this.comp).layer(this.layer).property("ADBE Root Vectors Group");    layerShapeContents.addProperty("ADBE Vector Shape - Rect");    layerShapeContents.property("ADBE Vector Shape - Rect").property("Size").setValue([10,10]);    layerShapeContents.addProperty("ADBE Vector Shape - Group");    layerShapeContents.addProperty("ADBE Vector Graphic - Stroke");    var line = new Shape();    line.vertices = [[this.anchor.x,this.anchor.y], [0, 0]]; //We're zeroing out the origin value because shape layers are already relative.    layerShapeContents.property(2).property("ADBE Vector Shape").setValue(line);    app.project.item(11).layer(1).name = "Spring";    };Spring.prototype.displayLine = function(b,time) {  //going to have to transform the postion values of b since it is in comp space  var layerShapeContents = app.project.item(this.comp).layer(this.layer).property("ADBE Root Vectors Group");  var line = new Shape();  line.vertices = [[0,0], [b.position.x - 960, b.position.y - 540]]; //just hardcoding the offset values for now  layerShapeContents.property(2).property("ADBE Vector Shape").setValueAtTime(time,line);  };/*As always, refer to The Nature of Code byDaniel Shiffmanhttp://natureofcode.comfor original examples!*/ 