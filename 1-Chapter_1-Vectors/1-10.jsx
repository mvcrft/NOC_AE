/*     Next, let's create the random Acceleration example.    */function Vector(x_,y_) {    this.x = x_;    this.y = y_;}function createVector(x_,y_){    return new Vector(x_,y_);}Vector.prototype.add = function(v){    this.x += v.x;    this.y += v.y;    };Vector.prototype.sub = function(v){    this.x -= v.x;    this.y-= v.y;    };Vector.prototype.mult = function(n){    this.x *= n;    this.y *= n;    };Vector.prototype.div = function(n){    this.x /= n;    this.y /= n;};Vector.prototype.magSq = function(){    return (this.x*this.x)+(this.y*this.y);    }Vector.prototype.mag = function(){    return Math.sqrt(this.magSq());    }Vector.prototype.setMag = function(n){    this.normalize();    this.mult(n);    }Vector.prototype.normalize = function(){    var mag = this.mag();    if (mag != 0){        this.x /= mag;        this.y /= mag;        }    };Vector.prototype.limit = function(max){    var mSq = this.magSq();    if (mSq > max*max){        this.div(Math.sqrt(mSq));        this.mult(max);        }};//Here's a new static vMath function. All we need for this example is subtract.vMath = new function() {    this.sub  = function(v1,v2){ return new Vector( v1.x -= v2.x,  v1.y -= v2.y);  };    };r = new function(){this.randomVal = function(max){return Math.abs(Math.random())*max;};this.randomRange = function(min,max){return (Math.random()*max) + min;};}var myComp = app.project.item(10);var myMover;var Mover = function() {  this.position = createVector(50,50);  this.velocity = createVector(0,0);  this.acceleration = createVector(0,0);  this.topspeed = 20; };//I'm looking at the P5 Examples here. Also, I'm going to pass time so we can get the value of the first layer's position. We'll need to create a vector from the mouse position, and then subtract them. setMag controls how tight the mover follows the null.Mover.prototype.update = function(time) {    var mouseVal = myComp.layer(1).position.valueAtTime(time,false);    mouse = new createVector(mouseVal[0],mouseVal[1]);    this.acceleration = vMath.sub(mouse,this.position);    this.acceleration.setMag(2);    this.velocity.add(this.acceleration);    this.velocity.limit(this.topspeed);    this.position.add(this.velocity);};      Mover.prototype.display = function(time) {    myComp.layer(2).position.setValueAtTime(time,[this.position.x,this.position.y]);};           Mover.prototype.checkEdges = function() {    if (this.position.x > myComp.width) {        this.position.x = 0;        }else if (this.position.x < 0) {            this.position.x = myComp.width;            };    if (this.position.y > myComp.height) {        this.position.y = 0;        }else if (this.position.y < 0) {            this.position.y = myComp.height;            };};myMover = new Mover();var myFrameDuration = myComp.frameDuration;var totalFrames = myComp.duration * myComp.frameRate;//setup()    myComp.layers.addShape();    myComp.layer(1).moveAfter(myComp.layer(2));    myComp.layer(2).property("ADBE Root Vectors Group").addProperty("ADBE Vector Shape - Ellipse");    myComp.layer(2).property("ADBE Root Vectors Group").addProperty("ADBE Vector Graphic - Fill");    myComp.layer(2).property("ADBE Root Vectors Group").property("ADBE Vector Graphic - Fill").property("ADBE Vector Fill Color").setValue([1,1,1,1]);//draw()for (i = 0; i<=totalFrames;i++){        var time = myFrameDuration*i;    myMover.update(time);    myMover.checkEdges();    myMover.display(time);};    /*As always, refer to The Nature of Code byDaniel Shiffmanhttp://natureofcode.comfor original examples!*/    