/*    Well, now we already have problems going to scripting. Expressions has built in Vector operations, but ExtendScript does not! We'd normally leverage the built in functions in Processing, but for our example from the Nature of Code to work, we're going to have to build our own. Let's create the createVector() class and functions first. I'm also looking primarily at Shiffman's p5.js implementations of his Nature of Code examples, so I've decided to go with the createVector() naming convention rather than PVector(). I'm also creating my vector class with 2D vectors for these simple examples, although when peeking at the source code, most vector math libraries have 3D built in.     I did some googling and also got some reference from of http://www.cgrats.com/javascript-2d-vector-library.htmlAuthor: Tudor Nita | cgrats.comAs always, refer to The Nature of Code byDaniel Shiffmanhttp://natureofcode.comfor original examples!*///Creating a new "class" for vector 2D structuresfunction createVector(x_,y_) {    this.x = x_;    this.y = y_;}//let's make a new Vector Math object to hold our function- I have the feeling we may need to make more.vMath = new function() {    this.add  = function(v1,v2){         v1.x += v2.x;         v1.y += v2.y;               }}//Now, let's set up the values using our new createVector object.var location = new createVector(100,190);var velocity = new createVector(15,15);//Let's create our loop. I'm manually targeting the second item in the project, but am finding the hard-coded value restricting. We should build something to find the composition's name.var myComp = app.project.item(2);var myFrameDuration = myComp.frameDuration;var totalFrames = myComp.duration * myComp.frameRate;//here's the Nature of Code bouncing ball example now utilizing vectors.for (i = 0; i<=totalFrames;i++){        vMath.add(location,velocity);            if ((location.x>myComp.width)|| (location.x < 0)){        velocity.x = velocity.x *-1;        };    if ((location.y>myComp.height)|| (location.y < 0)){        velocity.y = velocity.y *-1;        };        myComp.layer(1).position.setValueAtTime(myFrameDuration*i,[location.x,location.y]);    };